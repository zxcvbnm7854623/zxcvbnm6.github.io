{"ast":null,"code":"import { tagProps } from '../../tag/src/tag.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { isArray, isString } from '@vue/shared';\nimport { isUndefined } from '../../../utils/types.mjs';\nconst inputTagProps = buildProps({\n  modelValue: {\n    type: definePropType(Array)\n  },\n  max: Number,\n  tagType: {\n    ...tagProps.type,\n    default: \"info\"\n  },\n  tagEffect: tagProps.effect,\n  trigger: {\n    type: definePropType(String),\n    default: EVENT_CODE.enter\n  },\n  draggable: {\n    type: Boolean,\n    default: false\n  },\n  size: useSizeProp,\n  clearable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: void 0\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  readonly: Boolean,\n  autofocus: Boolean,\n  id: {\n    type: String,\n    default: void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0\n  },\n  maxlength: {\n    type: [String, Number]\n  },\n  minlength: {\n    type: [String, Number]\n  },\n  placeholder: String,\n  autocomplete: {\n    type: String,\n    default: \"off\"\n  },\n  ariaLabel: String\n});\nconst inputTagEmits = {\n  [UPDATE_MODEL_EVENT]: value => isArray(value) || isUndefined(value),\n  [CHANGE_EVENT]: value => isArray(value) || isUndefined(value),\n  [INPUT_EVENT]: value => isString(value),\n  \"add-tag\": value => isString(value),\n  \"remove-tag\": value => isString(value),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent,\n  clear: () => true\n};\nexport { inputTagEmits, inputTagProps };","map":{"version":3,"names":["inputTagProps","buildProps","modelValue","type","definePropType","Array","max","Number","tagType","tagProps","default","tagEffect","effect","trigger","String","EVENT_CODE","enter","draggable","Boolean","size","useSizeProp","clearable","disabled","validateEvent","readonly","autofocus","id","tabindex","maxlength","minlength","placeholder","autocomplete","ariaLabel","inputTagEmits","UPDATE_MODEL_EVENT","value","isArray","isUndefined","CHANGE_EVENT","INPUT_EVENT","isString","focus","evt","FocusEvent","blur","clear"],"sources":["../../../../../../packages/components/input-tag/src/input-tag.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isArray,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { tagProps } from '@element-plus/components/tag/src/tag'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const inputTagProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string[]>(Array),\n  },\n  /**\n   * @description max number tags that can be enter\n   */\n  max: Number,\n  /**\n   * @description tag type\n   */\n  tagType: { ...tagProps.type, default: 'info' },\n  /**\n   * @description tag effect\n   */\n  tagEffect: tagProps.effect,\n  /**\n   * @description the key to trigger input tag\n   */\n  trigger: {\n    type: definePropType<'Enter' | 'Space'>(String),\n    default: EVENT_CODE.enter,\n  },\n  /**\n   * @description whether tags can be dragged\n   */\n  draggable: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description input box size\n   */\n  size: useSizeProp,\n  /**\n   * @description whether to show clear button\n   */\n  clearable: Boolean,\n  /**\n   * @description whether to disable input-tag\n   */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description native input readonly\n   */\n  readonly: Boolean,\n  /**\n   * @description native input autofocus\n   */\n  autofocus: Boolean,\n  /**\n   * @description same as `id` in native input\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description same as `tabindex` in native input\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description same as `maxlength` in native input\n   */\n  maxlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description same as `minlength` in native input\n   */\n  minlength: {\n    type: [String, Number],\n  },\n  /**\n   * @description placeholder of input\n   */\n  placeholder: String,\n  /**\n   * @description native input autocomplete\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description native `aria-label` attribute\n   */\n  ariaLabel: String,\n} as const)\nexport type InputTagProps = ExtractPropTypes<typeof inputTagProps>\n\nexport const inputTagEmits = {\n  [UPDATE_MODEL_EVENT]: (value?: string[]) =>\n    isArray(value) || isUndefined(value),\n  [CHANGE_EVENT]: (value?: string[]) => isArray(value) || isUndefined(value),\n  [INPUT_EVENT]: (value: string) => isString(value),\n  'add-tag': (value: string) => isString(value),\n  'remove-tag': (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n}\nexport type InputTagEmits = typeof inputTagEmits\n"],"mappings":";;;;;;;AAeY,MAACA,aAAa,GAAGC,UAAU,CAAC;EACtCC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAACC,KAAK;EAC9B,CAAG;EACDC,GAAG,EAAEC,MAAM;EACXC,OAAO,EAAE;IAAE,GAAGC,QAAQ,CAACN,IAAI;IAAEO,OAAO,EAAE;EAAM,CAAE;EAC9CC,SAAS,EAAEF,QAAQ,CAACG,MAAM;EAC1BC,OAAO,EAAE;IACPV,IAAI,EAAEC,cAAc,CAACU,MAAM,CAAC;IAC5BJ,OAAO,EAAEK,UAAU,CAACC;EACxB,CAAG;EACDC,SAAS,EAAE;IACTd,IAAI,EAAEe,OAAO;IACbR,OAAO,EAAE;EACb,CAAG;EACDS,IAAI,EAAEC,WAAW;EACjBC,SAAS,EAAEH,OAAO;EAClBI,QAAQ,EAAE;IACRnB,IAAI,EAAEe,OAAO;IACbR,OAAO,EAAE,KAAK;EAClB,CAAG;EACDa,aAAa,EAAE;IACbpB,IAAI,EAAEe,OAAO;IACbR,OAAO,EAAE;EACb,CAAG;EACDc,QAAQ,EAAEN,OAAO;EACjBO,SAAS,EAAEP,OAAO;EAClBQ,EAAE,EAAE;IACFvB,IAAI,EAAEW,MAAM;IACZJ,OAAO,EAAE,KAAK;EAClB,CAAG;EACDiB,QAAQ,EAAE;IACRxB,IAAI,EAAE,CAACW,MAAM,EAAEP,MAAM,CAAC;IACtBG,OAAO,EAAE;EACb,CAAG;EACDkB,SAAS,EAAE;IACTzB,IAAI,EAAE,CAACW,MAAM,EAAEP,MAAM;EACzB,CAAG;EACDsB,SAAS,EAAE;IACT1B,IAAI,EAAE,CAACW,MAAM,EAAEP,MAAM;EACzB,CAAG;EACDuB,WAAW,EAAEhB,MAAM;EACnBiB,YAAY,EAAE;IACZ5B,IAAI,EAAEW,MAAM;IACZJ,OAAO,EAAE;EACb,CAAG;EACDsB,SAAS,EAAElB;AACb,CAAC;AACW,MAACmB,aAAa,GAAG;EAC3B,CAACC,kBAAkB,GAAIC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,IAAIE,WAAW,CAACF,KAAK,CAAC;EACrE,CAACG,YAAY,GAAIH,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,IAAIE,WAAW,CAACF,KAAK,CAAC;EAC/D,CAACI,WAAW,GAAIJ,KAAK,IAAKK,QAAQ,CAACL,KAAK,CAAC;EACzC,SAAS,EAAGA,KAAK,IAAKK,QAAQ,CAACL,KAAK,CAAC;EACrC,YAAY,EAAGA,KAAK,IAAKK,QAAQ,CAACL,KAAK,CAAC;EACxCM,KAAK,EAAGC,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACzCC,IAAI,EAAGF,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACxCE,KAAK,EAAEA,CAAA,KAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}