{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"label-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_label = _resolveComponent(\"el-label\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createBlock(_component_el_form, {\n    onSubmit: _withModifiers($options.onSubmit, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h2\", _hoisted_1, [_createVNode(_component_el_label, {\n      for: \"new-todo-input\",\n      class: \"label__lg\"\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" What needs to be done? \")])),\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_el_input, {\n      id: \"new-todo-input\",\n      name: \"new-todo\",\n      autocomplete: \"off\",\n      modelValue: $data.label,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.label = $event),\n      modelModifiers: {\n        lazy: true,\n        trim: true\n      },\n      class: \"input__lg\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"submit\",\n      class: \"btn btn__primary btn__lg\"\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Add\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_el_form","onSubmit","_withModifiers","$options","default","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_el_label","for","_cache","_createTextVNode","_","_component_el_input","id","name","autocomplete","modelValue","$data","label","$event","modelModifiers","lazy","trim","_component_el_button","type"],"sources":["D:\\web全栈开发\\test-site\\新建文件夹\\moz-todo-vue\\src\\components\\ToDoForm.vue"],"sourcesContent":["<template>\r\n  <el-form @submit.prevent=\"onSubmit\">\r\n    <h2 class=\"label-wrapper\">\r\n      <el-label for=\"new-todo-input\" class=\"label__lg\">\r\n        What needs to be done?\r\n      </el-label>\r\n    </h2>\r\n    <el-input\r\n      id=\"new-todo-input\"\r\n      name=\"new-todo\"\r\n      autocomplete=\"off\"\r\n      v-model.lazy.trim=\"label\"\r\n      class=\"input__lg\" />\r\n    <el-button type=\"submit\" class=\"btn btn__primary btn__lg\">Add</el-button>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { ElForm, ElLabel, ElInput, ElButton } from 'element-plus';\r\n\r\nexport default {\r\n  components: {\r\n    ElForm,\r\n    ElLabel,\r\n    ElInput,\r\n    ElButton\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      if (this.label === \"\") {\r\n        return;\r\n      }\r\n      this.$emit('todo-added', this.label);\r\n      this.label = \"\";\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      label: \"\",\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";;EAEQA,KAAK,EAAC;AAAe;;;;;;uBAD3BC,YAAA,CAaUC,kBAAA;IAbAC,QAAM,EADlBC,cAAA,CAC4BC,QAAA,CAAAF,QAAQ;;IADpCG,OAAA,EAAAC,QAAA,CAEI,MAIK,CAJLC,mBAAA,CAIK,MAJLC,UAIK,GAHHC,YAAA,CAEWC,mBAAA;MAFDC,GAAG,EAAC,gBAAgB;MAACZ,KAAK,EAAC;;MAH3CM,OAAA,EAAAC,QAAA,CAGuD,MAEjDM,MAAA,QAAAA,MAAA,OALNC,gBAAA,CAGuD,0BAEjD,E;MALNC,CAAA;UAOIL,YAAA,CAKsBM,mBAAA;MAJpBC,EAAE,EAAC,gBAAgB;MACnBC,IAAI,EAAC,UAAU;MACfC,YAAY,EAAC,KAAK;MAVxBC,UAAA,EAWyBC,KAAA,CAAAC,KAAK;MAX9B,uBAAAT,MAAA,QAAAA,MAAA,MAAAU,MAAA,IAWyBF,KAAA,CAAAC,KAAK,GAAAC,MAAA;MAX9BC,cAAA,EAWM;QAAAC,IAAA;QAAAC,IAAA;MAAA,CAAyB;MACzB1B,KAAK,EAAC;6CACRU,YAAA,CAAyEiB,oBAAA;MAA9DC,IAAI,EAAC,QAAQ;MAAC5B,KAAK,EAAC;;MAbnCM,OAAA,EAAAC,QAAA,CAa8D,MAAGM,MAAA,QAAAA,MAAA,OAbjEC,gBAAA,CAa8D,KAAG,E;MAbjEC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}