{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { reactive, ref, computed, nextTick, watch, watchEffect, onMounted } from 'vue';\nimport { debounce, get, findLastIndex, isEqual } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport { useAllowCreate } from './useAllowCreate.mjs';\nimport { useProps } from './useProps.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { useEmptyValues } from '../../../hooks/use-empty-values/index.mjs';\nimport { useComposition } from '../../../hooks/use-composition/index.mjs';\nimport { useFocusController } from '../../../hooks/use-focus-controller/index.mjs';\nimport { isArray, isObject, isFunction } from '@vue/shared';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\nconst MINIMUM_INPUT_WIDTH = 11;\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = useLocale();\n  const nsSelect = useNamespace(\"select\");\n  const nsInput = useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem();\n  const {\n    inputId\n  } = useFormItemInputId(props, {\n    formItemContext: elFormItem\n  });\n  const {\n    aliasProps,\n    getLabel,\n    getValue,\n    getDisabled,\n    getOptions\n  } = useProps(props);\n  const {\n    valueOnClear,\n    isEmptyValue\n  } = useEmptyValues(props);\n  const states = reactive({\n    inputValue: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    collapseItemWidth: 0,\n    previousQuery: null,\n    previousValue: void 0,\n    selectedLabel: \"\",\n    menuVisibleOnFocus: false,\n    isBeforeHide: false\n  });\n  const popperSize = ref(-1);\n  const selectRef = ref();\n  const selectionRef = ref();\n  const tooltipRef = ref();\n  const tagTooltipRef = ref();\n  const inputRef = ref();\n  const calculatorRef = ref();\n  const prefixRef = ref();\n  const suffixRef = ref();\n  const menuRef = ref();\n  const tagMenuRef = ref();\n  const collapseItemRef = ref();\n  const {\n    isComposing,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  } = useComposition({\n    afterComposition: e => onInput(e)\n  });\n  const {\n    wrapperRef,\n    isFocused,\n    handleBlur\n  } = useFocusController(inputRef, {\n    beforeFocus() {\n      return selectDisabled.value;\n    },\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true;\n        states.menuVisibleOnFocus = true;\n      }\n    },\n    beforeBlur(event) {\n      var _a, _b;\n      return ((_a = tooltipRef.value) == null ? void 0 : _a.isFocusInsideContent(event)) || ((_b = tagTooltipRef.value) == null ? void 0 : _b.isFocusInsideContent(event));\n    },\n    afterBlur() {\n      expanded.value = false;\n      states.menuVisibleOnFocus = false;\n    }\n  });\n  const allOptions = ref([]);\n  const filteredOptions = ref([]);\n  const expanded = ref(false);\n  const selectDisabled = computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const needStatusIcon = computed(() => {\n    var _a;\n    return (_a = elForm == null ? void 0 : elForm.statusIcon) != null ? _a : false;\n  });\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = computed(() => {\n    return props.multiple ? isArray(props.modelValue) && props.modelValue.length > 0 : !isEmptyValue(props.modelValue);\n  });\n  const showClearBtn = computed(() => {\n    return props.clearable && !selectDisabled.value && states.inputHovering && hasModelValue.value;\n  });\n  const iconComponent = computed(() => props.remote && props.filterable ? \"\" : ArrowDown);\n  const iconReverse = computed(() => iconComponent.value && nsSelect.is(\"reverse\", expanded.value));\n  const validateState = computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = computed(() => {\n    if (!validateState.value) return;\n    return ValidateComponentsMap[validateState.value];\n  });\n  const debounce$1 = computed(() => props.remote ? 300 : 0);\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0) return false;\n      if (props.filterable && states.inputValue && allOptions.value.length > 0 && filteredOptions.value.length === 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n    return null;\n  });\n  const filterOptions = query => {\n    const isValidOption = o => {\n      if (props.filterable && isFunction(props.filterMethod)) return true;\n      if (props.filterable && props.remote && isFunction(props.remoteMethod)) return true;\n      const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n      return query ? regexp.test(getLabel(o) || \"\") : true;\n    };\n    if (props.loading) {\n      return [];\n    }\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item);\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption);\n        if (filtered.length > 0) {\n          all.push({\n            label: getLabel(item),\n            type: \"Group\"\n          }, ...filtered);\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item);\n      }\n      return all;\n    }, []);\n  };\n  const updateOptions = () => {\n    allOptions.value = filterOptions(\"\");\n    filteredOptions.value = filterOptions(states.inputValue);\n  };\n  const allOptionsValueMap = computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    allOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const optionsAllDisabled = computed(() => filteredOptions.value.every(option => getDisabled(option)));\n  const selectSize = useFormSize();\n  const collapseTagSize = computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const calculatePopperSize = () => {\n    var _a;\n    popperSize.value = ((_a = selectRef.value) == null ? void 0 : _a.offsetWidth) || 200;\n  };\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0;\n    const style = window.getComputedStyle(selectionRef.value);\n    return Number.parseFloat(style.gap || \"6px\");\n  };\n  const tagStyle = computed(() => {\n    const gapWidth = getGapWidth();\n    const maxWidth = collapseItemRef.value && props.maxCollapseTags === 1 ? states.selectionWidth - states.collapseItemWidth - gapWidth : states.selectionWidth;\n    return {\n      maxWidth: `${maxWidth}px`\n    };\n  });\n  const collapseTagStyle = computed(() => {\n    return {\n      maxWidth: `${states.selectionWidth}px`\n    };\n  });\n  const inputStyle = computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`\n  }));\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue;\n    }\n    return props.filterable ? !states.inputValue : true;\n  });\n  const currentPlaceholder = computed(() => {\n    var _a;\n    const _placeholder = (_a = props.placeholder) != null ? _a : t(\"el.select.placeholder\");\n    return props.multiple || !hasModelValue.value ? _placeholder : states.selectedLabel;\n  });\n  const popperRef = computed(() => {\n    var _a, _b;\n    return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n      if (props.modelValue.length > 0 && filteredOptionsValueMap.value.has(props.modelValue[len - 1])) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue[len - 1]);\n        return index;\n      }\n    } else {\n      if (props.modelValue && filteredOptionsValueMap.value.has(props.modelValue)) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue);\n        return index;\n      }\n    }\n    return -1;\n  });\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false;\n    },\n    set(val) {\n      expanded.value = val;\n    }\n  });\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(0, props.maxCollapseTags) : states.cachedOptions;\n  });\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(props.maxCollapseTags) : [];\n  });\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate(props, states);\n  const toggleMenu = () => {\n    if (selectDisabled.value) return;\n    if (states.menuVisibleOnFocus) {\n      states.menuVisibleOnFocus = false;\n    } else {\n      expanded.value = !expanded.value;\n    }\n  };\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n    createNewOption(states.inputValue);\n    handleQueryChange(states.inputValue);\n  };\n  const debouncedOnInputChange = debounce(onInputChange, debounce$1.value);\n  const handleQueryChange = val => {\n    if (states.previousQuery === val || isComposing.value) {\n      return;\n    }\n    states.previousQuery = val;\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n    if (props.defaultFirstOption && (props.filterable || props.remote) && filteredOptions.value.length) {\n      nextTick(checkDefaultFirstOption);\n    } else {\n      nextTick(updateHoveringIndex);\n    }\n  };\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(n => !n.disabled && n.type !== \"Group\");\n    const userCreatedOption = optionsInDropdown.find(n => n.created);\n    const firstOriginOption = optionsInDropdown[0];\n    states.hoveringIndex = getValueIndex(filteredOptions.value, userCreatedOption || firstOriginOption);\n  };\n  const emitChange = val => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val);\n    }\n  };\n  const update = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = props.multiple ? String(val) : val;\n  };\n  const getValueIndex = (arr = [], value) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value);\n    }\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n      return false;\n    });\n    return index;\n  };\n  const getValueKey = item => {\n    return isObject(item) ? get(item, props.valueKey) : item;\n  };\n  const handleResize = () => {\n    calculatePopperSize();\n  };\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value.getBoundingClientRect().width;\n  };\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value.getBoundingClientRect().width;\n  };\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth = collapseItemRef.value.getBoundingClientRect().width;\n  };\n  const updateTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const updateTagTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tagTooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const onSelect = option => {\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValue(option));\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValue(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n      }\n      update(selectedOptions);\n      if (option.created) {\n        handleQueryChange(\"\");\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = \"\";\n      }\n    } else {\n      states.selectedLabel = getLabel(option);\n      update(getValue(option));\n      expanded.value = false;\n      selectNewOption(option);\n      if (!option.created) {\n        clearAllNewOption();\n      }\n    }\n    focus();\n  };\n  const deleteTag = (event, option) => {\n    let selectedOptions = props.modelValue.slice();\n    const index = getValueIndex(selectedOptions, getValue(option));\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(selectedOptions);\n      emit(\"remove-tag\", getValue(option));\n      removeNewOption(option);\n    }\n    event.stopPropagation();\n    focus();\n  };\n  const focus = () => {\n    var _a;\n    (_a = inputRef.value) == null ? void 0 : _a.focus();\n  };\n  const blur = () => {\n    var _a;\n    if (expanded.value) {\n      expanded.value = false;\n      nextTick(() => {\n        var _a2;\n        return (_a2 = inputRef.value) == null ? void 0 : _a2.blur();\n      });\n      return;\n    }\n    (_a = inputRef.value) == null ? void 0 : _a.blur();\n  };\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = \"\";\n    } else {\n      expanded.value = false;\n    }\n  };\n  const getLastNotDisabledIndex = value => findLastIndex(value, it => !states.cachedOptions.some(option => getValue(option) === it && getDisabled(option)));\n  const handleDel = e => {\n    if (!props.multiple) return;\n    if (e.code === EVENT_CODE.delete) return;\n    if (states.inputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected);\n      if (lastNotDisabledIndex < 0) return;\n      const removeTagValue = selected[lastNotDisabledIndex];\n      selected.splice(lastNotDisabledIndex, 1);\n      const option = states.cachedOptions[lastNotDisabledIndex];\n      states.cachedOptions.splice(lastNotDisabledIndex, 1);\n      removeNewOption(option);\n      update(selected);\n      emit(\"remove-tag\", removeTagValue);\n    }\n  };\n  const handleClear = () => {\n    let emptyValue;\n    if (isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = valueOnClear.value;\n    }\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    focus();\n  };\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value || isComposing.value) {\n      return;\n    }\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n    let newIndex = -1;\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n      if (newIndex < 0 || newIndex >= options.length) {\n        newIndex = options.length - 1;\n      }\n    }\n    const option = options[newIndex];\n    if (getDisabled(option) || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      states.hoveringIndex = newIndex;\n      scrollToItem(newIndex);\n    }\n  };\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex]);\n    }\n  };\n  const onHoverOption = idx => {\n    states.hoveringIndex = idx != null ? idx : -1;\n  };\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex(item => {\n        return getValueKey(item) === getValueKey(props.modelValue);\n      });\n    } else {\n      states.hoveringIndex = filteredOptions.value.findIndex(item => props.modelValue.some(modelValue => getValueKey(modelValue) === getValueKey(item)));\n    }\n  };\n  const onInput = event => {\n    states.inputValue = event.target.value;\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n  const handleClickOutside = event => {\n    expanded.value = false;\n    if (isFocused.value) {\n      const _event = new FocusEvent(\"focus\", event);\n      handleBlur(_event);\n    }\n  };\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false;\n    return nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n  const getOption = (value, cachedOptions) => {\n    const selectValue = getValueKey(value);\n    if (allOptionsValueMap.value.has(selectValue)) {\n      const {\n        option\n      } = allOptionsValueMap.value.get(selectValue);\n      return option;\n    }\n    if (cachedOptions && cachedOptions.length) {\n      const option = cachedOptions.find(option2 => getValueKey(getValue(option2)) === selectValue);\n      if (option) {\n        return option;\n      }\n    }\n    return {\n      [aliasProps.value.value]: value,\n      [aliasProps.value.label]: value\n    };\n  };\n  const initStates = (needUpdateSelectedLabel = false) => {\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        const cachedOptions = states.cachedOptions.slice();\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        for (const value of props.modelValue) {\n          const option = getOption(value, cachedOptions);\n          states.cachedOptions.push(option);\n        }\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = void 0;\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(getValue(option)) === getValueKey(props.modelValue));\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex]);\n        } else {\n          if (!states.selectedLabel || needUpdateSelectedLabel) {\n            states.selectedLabel = getValueKey(props.modelValue);\n          }\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = void 0;\n      }\n    }\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n  watch(expanded, val => {\n    if (val) {\n      handleQueryChange(\"\");\n    } else {\n      states.inputValue = \"\";\n      states.previousQuery = null;\n      states.isBeforeHide = true;\n      createNewOption(\"\");\n    }\n    emit(\"visible-change\", val);\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n    const isValEmpty = !val || isArray(val) && val.length === 0;\n    if (isValEmpty || props.multiple && !isEqual(val.toString(), states.previousValue) || !props.multiple && getValueKey(val) !== getValueKey(states.previousValue)) {\n      initStates(true);\n    }\n    if (!isEqual(val, oldVal) && props.validateEvent) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  watch(() => props.options, () => {\n    const input = inputRef.value;\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true,\n    flush: \"post\"\n  });\n  watch(() => filteredOptions.value, () => {\n    return menuRef.value && nextTick(menuRef.value.resetScrollTop);\n  });\n  watchEffect(() => {\n    if (states.isBeforeHide) return;\n    updateOptions();\n  });\n  watchEffect(() => {\n    const {\n      valueKey,\n      options\n    } = props;\n    const duplicateValue = /* @__PURE__ */new Map();\n    for (const item of options) {\n      const optionValue = getValue(item);\n      let v = optionValue;\n      if (isObject(v)) {\n        v = get(optionValue, valueKey);\n      }\n      if (duplicateValue.get(v)) {\n        debugWarn(\"ElSelectV2\", `The option values you provided seem to be duplicated, which may cause some problems, please check.`);\n        break;\n      } else {\n        duplicateValue.set(v, true);\n      }\n    }\n  });\n  onMounted(() => {\n    initStates();\n  });\n  useResizeObserver(selectRef, handleResize);\n  useResizeObserver(selectionRef, resetSelectionWidth);\n  useResizeObserver(calculatorRef, resetCalculatorWidth);\n  useResizeObserver(menuRef, updateTooltip);\n  useResizeObserver(wrapperRef, updateTooltip);\n  useResizeObserver(tagMenuRef, updateTagTooltip);\n  useResizeObserver(collapseItemRef, resetCollapseItemWidth);\n  return {\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce: debounce$1,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    collapseTagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    needStatusIcon,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n    collapseItemRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\nexport { useSelect as default };","map":{"version":3,"names":["MINIMUM_INPUT_WIDTH","useSelect","props","emit","t","useLocale","nsSelect","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","inputId","useFormItemInputId","formItemContext","aliasProps","getLabel","getValue","getDisabled","getOptions","useProps","valueOnClear","isEmptyValue","useEmptyValues","states","reactive","inputValue","cachedOptions","createdOptions","hoveringIndex","inputHovering","selectionWidth","calculatorWidth","collapseItemWidth","previousQuery","previousValue","selectedLabel","menuVisibleOnFocus","isBeforeHide","popperSize","ref","selectRef","selectionRef","tooltipRef","tagTooltipRef","inputRef","calculatorRef","prefixRef","suffixRef","menuRef","tagMenuRef","collapseItemRef","isComposing","handleCompositionStart","handleCompositionEnd","handleCompositionUpdate","useComposition","afterComposition","e","onInput","wrapperRef","isFocused","handleBlur","useFocusController","beforeFocus","selectDisabled","value","afterFocus","automaticDropdown","expanded","beforeBlur","event","_a","_b","isFocusInsideContent","afterBlur","allOptions","filteredOptions","computed","disabled","needStatusIcon","statusIcon","popupHeight","totalHeight","length","itemHeight","height","hasModelValue","multiple","isArray","modelValue","showClearBtn","clearable","iconComponent","remote","filterable","ArrowDown","iconReverse","is","validateState","validateIcon","ValidateComponentsMap","debounce$1","emptyText","loading","loadingText","noMatchText","noDataText","filterOptions","query","isValidOption","o","isFunction","filterMethod","remoteMethod","regexp","RegExp","escapeStringRegexp","test","options","reduce","all","item","filtered","filter","push","label","type","updateOptions","allOptionsValueMap","valueMap","Map","forEach","option","index","set","getValueKey","filteredOptionsValueMap","optionsAllDisabled","every","selectSize","useFormSize","collapseTagSize","calculatePopperSize","offsetWidth","getGapWidth","style","window","getComputedStyle","Number","parseFloat","gap","tagStyle","gapWidth","maxWidth","maxCollapseTags","collapseTagStyle","inputStyle","width","Math","max","shouldShowPlaceholder","currentPlaceholder","_placeholder","placeholder","popperRef","contentRef","indexRef","len","has","get","dropdownMenuVisible","val","showTagList","collapseTags","slice","collapseTagList","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","toggleMenu","onInputChange","handleQueryChange","debouncedOnInputChange","debounce","defaultFirstOption","nextTick","checkDefaultFirstOption","updateHoveringIndex","optionsInDropdown","n","userCreatedOption","find","created","firstOriginOption","getValueIndex","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","String","arr","isObject","indexOf","valueKey","some","i","handleResize","resetSelectionWidth","getBoundingClientRect","resetCalculatorWidth","resetCollapseItemWidth","updateTooltip","updatePopper","call","updateTagTooltip","onSelect","selectedOptions","splice","multipleLimit","reserveKeyword","focus","deleteTag","stopPropagation","blur","_a2","handleEsc","getLastNotDisabledIndex","findLastIndex","it","handleDel","code","EVENT_CODE","delete","preventDefault","selected","lastNotDisabledIndex","removeTagValue","handleClear","emptyValue","onKeyboardNavigate","direction","includes","newIndex","scrollToItem","onKeyboardSelect","onHoverOption","idx","findIndex","target","handleClickOutside","_event","FocusEvent","handleMenuEnter","getOption","selectValue","option2","initStates","needUpdateSelectedLabel","toString","selectedItemIndex","watch","oldVal","isValEmpty","validateEvent","validate","catch","err","debugWarn","deep","input","document","activeElement","flush","resetScrollTop","watchEffect","duplicateValue","optionValue","v","onMounted","useResizeObserver","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["import {\n  computed,\n  nextTick,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  findLastIndex,\n  get,\n  isEqual,\n  debounce as lodashDebounce,\n} from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n  isArray,\n  isFunction,\n  isObject,\n} from '@element-plus/utils'\nimport {\n  useComposition,\n  useEmptyValues,\n  useFocusController,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\n\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\nimport { useProps } from './useProps'\n\nimport type { Option, OptionType, SelectStates } from './select.types'\nimport type { ISelectV2Props } from './token'\nimport type { SelectEmitFn } from './defaults'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { SelectDropdownInstance } from './select-dropdown'\n\nconst MINIMUM_INPUT_WIDTH = 11\n\nconst useSelect = (props: ISelectV2Props, emit: SelectEmitFn) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelect = useNamespace('select')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n  const { inputId } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n  })\n  const { aliasProps, getLabel, getValue, getDisabled, getOptions } =\n    useProps(props)\n  const { valueOnClear, isEmptyValue } = useEmptyValues(props)\n\n  const states: SelectStates = reactive({\n    inputValue: '',\n    cachedOptions: [],\n    createdOptions: [],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    collapseItemWidth: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    selectedLabel: '',\n    menuVisibleOnFocus: false,\n    isBeforeHide: false,\n  })\n\n  // data refs\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const selectRef = ref<HTMLElement>()\n  const selectionRef = ref<HTMLElement>()\n  const tooltipRef = ref<TooltipInstance>()\n  const tagTooltipRef = ref<TooltipInstance>()\n  const inputRef = ref<HTMLElement>()\n  const calculatorRef = ref<HTMLElement>()\n  const prefixRef = ref<HTMLElement>()\n  const suffixRef = ref<HTMLElement>()\n  const menuRef = ref<SelectDropdownInstance>()\n  const tagMenuRef = ref<HTMLElement>()\n  const collapseItemRef = ref<HTMLElement>()\n\n  const {\n    isComposing,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  } = useComposition({\n    afterComposition: (e) => onInput(e),\n  })\n\n  const { wrapperRef, isFocused, handleBlur } = useFocusController(inputRef, {\n    beforeFocus() {\n      return selectDisabled.value\n    },\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true\n        states.menuVisibleOnFocus = true\n      }\n    },\n    beforeBlur(event) {\n      return (\n        tooltipRef.value?.isFocusInsideContent(event) ||\n        tagTooltipRef.value?.isFocusInsideContent(event)\n      )\n    },\n    afterBlur() {\n      expanded.value = false\n      states.menuVisibleOnFocus = false\n    },\n  })\n\n  const allOptions = ref<OptionType[]>([])\n  const filteredOptions = ref<OptionType[]>([])\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const needStatusIcon = computed(() => elForm?.statusIcon ?? false)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return props.multiple\n      ? isArray(props.modelValue) && props.modelValue.length > 0\n      : !isEmptyValue(props.modelValue)\n  })\n\n  const showClearBtn = computed(() => {\n    return (\n      props.clearable &&\n      !selectDisabled.value &&\n      states.inputHovering &&\n      hasModelValue.value\n    )\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowDown\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelect.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(() => {\n    // When we use indexed access to get the type of an undeclared property,\n    // the unsafe type `any` will be inferred, which TypeScript throws an error to emphasize it.\n    // To avoid TypeScript complaining about it, we use truthiness narrowing to narrow the type of validateState.\n    if (!validateState.value) return\n    return ValidateComponentsMap[validateState.value]\n  })\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0)\n        return false\n      if (\n        props.filterable &&\n        states.inputValue &&\n        allOptions.value.length > 0 &&\n        filteredOptions.value.length === 0\n      ) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filterOptions = (query: string) => {\n    const isValidOption = (o: Option): boolean => {\n      if (props.filterable && isFunction(props.filterMethod)) return true\n      if (props.filterable && props.remote && isFunction(props.remoteMethod))\n        return true\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      return query ? regexp.test(getLabel(o) || '') : true\n    }\n    if (props.loading) {\n      return []\n    }\n\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item)\n\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption)\n\n        if (filtered.length > 0) {\n          all.push(\n            {\n              label: getLabel(item),\n              type: 'Group',\n            },\n            ...filtered\n          )\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item)\n      }\n\n      return all\n    }, []) as OptionType[]\n  }\n\n  const updateOptions = () => {\n    allOptions.value = filterOptions('')\n    filteredOptions.value = filterOptions(states.inputValue)\n  }\n\n  const allOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    allOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => getDisabled(option))\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0\n    const style = window.getComputedStyle(selectionRef.value)\n    return Number.parseFloat(style.gap || '6px')\n  }\n\n  // computed style\n  const tagStyle = computed(() => {\n    const gapWidth = getGapWidth()\n    const maxWidth =\n      collapseItemRef.value && props.maxCollapseTags === 1\n        ? states.selectionWidth - states.collapseItemWidth - gapWidth\n        : states.selectionWidth\n    return { maxWidth: `${maxWidth}px` }\n  })\n\n  const collapseTagStyle = computed(() => {\n    return { maxWidth: `${states.selectionWidth}px` }\n  })\n\n  const inputStyle = computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`,\n  }))\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? !states.inputValue : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder ?? t('el.select.placeholder')\n    return props.multiple || !hasModelValue.value\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => tooltipRef.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if (\n        (props.modelValue as Array<any>).length > 0 &&\n        filteredOptionsValueMap.value.has(props.modelValue[len - 1])\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(\n          props.modelValue[len - 1]\n        )\n        return index\n      }\n    } else {\n      if (\n        props.modelValue &&\n        filteredOptionsValueMap.value.has(props.modelValue)\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(props.modelValue)\n        return index\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(0, props.maxCollapseTags)\n      : states.cachedOptions\n  })\n\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(props.maxCollapseTags)\n      : []\n  })\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n\n  // methods\n  const toggleMenu = () => {\n    if (selectDisabled.value) return\n\n    if (states.menuVisibleOnFocus) {\n      // controlled by automaticDropdown\n      states.menuVisibleOnFocus = false\n    } else {\n      expanded.value = !expanded.value\n    }\n  }\n\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n    createNewOption(states.inputValue)\n    handleQueryChange(states.inputValue)\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val || isComposing.value) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n    if (\n      props.defaultFirstOption &&\n      (props.filterable || props.remote) &&\n      filteredOptions.value.length\n    ) {\n      nextTick(checkDefaultFirstOption)\n    } else {\n      nextTick(updateHoveringIndex)\n    }\n  }\n\n  /**\n   * find and highlight first option as default selected\n   * @remark\n   * - if the first option in dropdown list is user-created,\n   *   it would be at the end of the optionsArray\n   *   so find it and set hover.\n   *   (NOTE: there must be only one user-created option in dropdown list with query)\n   * - if there's no user-created option in list, just find the first one as usual\n   *   (NOTE: exclude options that are disabled or in disabled-group)\n   */\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(\n      (n) => !n.disabled && n.type !== 'Group'\n    )\n    const userCreatedOption = optionsInDropdown.find((n) => n.created)\n    const firstOriginOption = optionsInDropdown[0]\n    states.hoveringIndex = getValueIndex(\n      filteredOptions.value,\n      userCreatedOption || firstOriginOption\n    )\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = props.multiple ? String(val) : val\n  }\n\n  const getValueIndex = (arr: unknown[] = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  const handleResize = () => {\n    calculatePopperSize()\n  }\n\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value!.getBoundingClientRect().width\n  }\n\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value!.getBoundingClientRect().width\n  }\n\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth =\n      collapseItemRef.value!.getBoundingClientRect().width\n  }\n\n  const updateTooltip = () => {\n    tooltipRef.value?.updatePopper?.()\n  }\n\n  const updateTagTooltip = () => {\n    tagTooltipRef.value?.updatePopper?.()\n  }\n\n  const onSelect = (option: Option) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValue(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValue(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        handleQueryChange('')\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = ''\n      }\n    } else {\n      states.selectedLabel = getLabel(option)\n      update(getValue(option))\n      expanded.value = false\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n    }\n    focus()\n  }\n\n  const deleteTag = (event: MouseEvent, option: Option) => {\n    let selectedOptions = (props.modelValue as any[]).slice()\n\n    const index = getValueIndex(selectedOptions, getValue(option))\n\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(selectedOptions)\n      emit('remove-tag', getValue(option))\n      removeNewOption(option)\n    }\n    event.stopPropagation()\n    focus()\n  }\n\n  const focus = () => {\n    inputRef.value?.focus()\n  }\n\n  const blur = () => {\n    if (expanded.value) {\n      expanded.value = false\n      nextTick(() => inputRef.value?.blur())\n      return\n    }\n    inputRef.value?.blur()\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = ''\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const getLastNotDisabledIndex = (value: unknown[]) =>\n    findLastIndex(\n      value,\n      (it) =>\n        !states.cachedOptions.some(\n          (option) => getValue(option) === it && getDisabled(option)\n        )\n    )\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (!props.multiple) return\n    if (e.code === EVENT_CODE.delete) return\n    if (states.inputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected)\n      if (lastNotDisabledIndex < 0) return\n      const removeTagValue = selected[lastNotDisabledIndex]\n      selected.splice(lastNotDisabledIndex, 1)\n      const option = states.cachedOptions[lastNotDisabledIndex]\n      states.cachedOptions.splice(lastNotDisabledIndex, 1)\n      removeNewOption(option)\n      update(selected)\n      emit('remove-tag', removeTagValue)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = valueOnClear.value\n    }\n\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    focus()\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number | undefined = undefined\n  ): void => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value ||\n      isComposing.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (getDisabled(option) || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      states.hoveringIndex = newIndex\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(filteredOptions.value[states.hoveringIndex])\n    }\n  }\n\n  const onHoverOption = (idx?: number) => {\n    states.hoveringIndex = idx ?? -1\n  }\n\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex((item) => {\n        return getValueKey(item) === getValueKey(props.modelValue)\n      })\n    } else {\n      states.hoveringIndex = filteredOptions.value.findIndex((item) =>\n        props.modelValue.some(\n          (modelValue: unknown) => getValueKey(modelValue) === getValueKey(item)\n        )\n      )\n    }\n  }\n\n  const onInput = (event: Event) => {\n    states.inputValue = (event.target as HTMLInputElement).value\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = (event: Event) => {\n    expanded.value = false\n\n    if (isFocused.value) {\n      const _event = new FocusEvent('focus', event)\n      handleBlur(_event)\n    }\n  }\n\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false\n    return nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value!.scrollToItem(index)\n  }\n\n  const getOption = (value: unknown, cachedOptions?: Option[]) => {\n    // match the option with the given value, if not found, create a new option\n    const selectValue = getValueKey(value)\n\n    if (allOptionsValueMap.value.has(selectValue)) {\n      const { option } = allOptionsValueMap.value.get(selectValue)\n\n      return option\n    }\n    if (cachedOptions && cachedOptions.length) {\n      const option = cachedOptions.find(\n        (option) => getValueKey(getValue(option)) === selectValue\n      )\n      if (option) {\n        return option\n      }\n    }\n\n    return {\n      [aliasProps.value.value]: value,\n      [aliasProps.value.label]: value,\n    }\n  }\n\n  const initStates = (needUpdateSelectedLabel = false) => {\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        const cachedOptions = states.cachedOptions.slice()\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n\n        for (const value of props.modelValue) {\n          const option = getOption(value, cachedOptions)\n          states.cachedOptions.push(option)\n        }\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) =>\n            getValueKey(getValue(option)) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex])\n        } else {\n          if (!states.selectedLabel || needUpdateSelectedLabel) {\n            states.selectedLabel = getValueKey(props.modelValue)\n          }\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    if (val) {\n      handleQueryChange('')\n    } else {\n      states.inputValue = ''\n      states.previousQuery = null\n      states.isBeforeHide = true\n      createNewOption('')\n    }\n    emit('visible-change', val)\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      const isValEmpty = !val || (isArray(val) && val.length === 0)\n\n      if (\n        isValEmpty ||\n        (props.multiple && !isEqual(val.toString(), states.previousValue)) ||\n        (!props.multiple &&\n          getValueKey(val) !== getValueKey(states.previousValue))\n      ) {\n        initStates(true)\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n      flush: 'post',\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(\n    () => filteredOptions.value,\n    () => {\n      return menuRef.value && nextTick(menuRef.value.resetScrollTop)\n    }\n  )\n\n  watchEffect(() => {\n    // Anything could cause options changed, then update options\n    // If you want to control it by condition, write here\n    if (states.isBeforeHide) return\n    updateOptions()\n  })\n\n  watchEffect(() => {\n    const { valueKey, options } = props\n    const duplicateValue = new Map()\n    for (const item of options) {\n      const optionValue = getValue(item)\n      let v = optionValue\n      if (isObject(v)) {\n        v = get(optionValue, valueKey)\n      }\n      if (duplicateValue.get(v)) {\n        debugWarn(\n          'ElSelectV2',\n          `The option values you provided seem to be duplicated, which may cause some problems, please check.`\n        )\n        break\n      } else {\n        duplicateValue.set(v, true)\n      }\n    }\n  })\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n  useResizeObserver(selectionRef, resetSelectionWidth)\n  useResizeObserver(calculatorRef, resetCalculatorWidth)\n  useResizeObserver(menuRef, updateTooltip)\n  useResizeObserver(wrapperRef, updateTooltip)\n  useResizeObserver(tagMenuRef, updateTagTooltip)\n  useResizeObserver(collapseItemRef, resetCollapseItemWidth)\n\n  return {\n    // data exports\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    collapseTagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    needStatusIcon,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n    collapseItemRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}