{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { defineComponent, computed, watch, provide, reactive, toRefs, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport { formContextKey } from './constants.mjs';\nimport { formProps, formEmits } from './form.mjs';\nimport { useFormLabelWidth, filterFields } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormSize } from './hooks/use-form-common-props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isFunction } from '@vue/shared';\nconst COMPONENT_NAME = \"ElForm\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: formProps,\n  emits: formEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const fields = [];\n    const formSize = useFormSize();\n    const ns = useNamespace(\"form\");\n    const formClasses = computed(() => {\n      const {\n        labelPosition,\n        inline\n      } = props;\n      return [ns.b(), ns.m(formSize.value || \"default\"), {\n        [ns.m(`label-${labelPosition}`)]: labelPosition,\n        [ns.m(\"inline\")]: inline\n      }];\n    });\n    const getField = prop => {\n      return fields.find(field => field.prop === prop);\n    };\n    const addField = field => {\n      fields.push(field);\n    };\n    const removeField = field => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    };\n    const resetFields = (properties = []) => {\n      if (!props.model) {\n        debugWarn(COMPONENT_NAME, \"model is required for resetFields to work.\");\n        return;\n      }\n      filterFields(fields, properties).forEach(field => field.resetField());\n    };\n    const clearValidate = (props2 = []) => {\n      filterFields(fields, props2).forEach(field => field.clearValidate());\n    };\n    const isValidatable = computed(() => {\n      const hasModel = !!props.model;\n      if (!hasModel) {\n        debugWarn(COMPONENT_NAME, \"model is required for validate to work.\");\n      }\n      return hasModel;\n    });\n    const obtainValidateFields = props2 => {\n      if (fields.length === 0) return [];\n      const filteredFields = filterFields(fields, props2);\n      if (!filteredFields.length) {\n        debugWarn(COMPONENT_NAME, \"please pass correct props!\");\n        return [];\n      }\n      return filteredFields;\n    };\n    const validate = async callback => validateField(void 0, callback);\n    const doValidateField = async (props2 = []) => {\n      if (!isValidatable.value) return false;\n      const fields2 = obtainValidateFields(props2);\n      if (fields2.length === 0) return true;\n      let validationErrors = {};\n      for (const field of fields2) {\n        try {\n          await field.validate(\"\");\n        } catch (fields3) {\n          validationErrors = {\n            ...validationErrors,\n            ...fields3\n          };\n        }\n      }\n      if (Object.keys(validationErrors).length === 0) return true;\n      return Promise.reject(validationErrors);\n    };\n    const validateField = async (modelProps = [], callback) => {\n      const shouldThrow = !isFunction(callback);\n      try {\n        const result = await doValidateField(modelProps);\n        if (result === true) {\n          await (callback == null ? void 0 : callback(result));\n        }\n        return result;\n      } catch (e) {\n        if (e instanceof Error) throw e;\n        const invalidFields = e;\n        if (props.scrollToError) {\n          scrollToField(Object.keys(invalidFields)[0]);\n        }\n        await (callback == null ? void 0 : callback(false, invalidFields));\n        return shouldThrow && Promise.reject(invalidFields);\n      }\n    };\n    const scrollToField = prop => {\n      var _a;\n      const field = filterFields(fields, prop)[0];\n      if (field) {\n        (_a = field.$el) == null ? void 0 : _a.scrollIntoView(props.scrollIntoViewOptions);\n      }\n    };\n    watch(() => props.rules, () => {\n      if (props.validateOnRuleChange) {\n        validate().catch(err => debugWarn(err));\n      }\n    }, {\n      deep: true\n    });\n    provide(formContextKey, reactive({\n      ...toRefs(props),\n      emit,\n      resetFields,\n      clearValidate,\n      validateField,\n      getField,\n      addField,\n      removeField,\n      ...useFormLabelWidth()\n    }));\n    expose({\n      validate,\n      validateField,\n      resetFields,\n      clearValidate,\n      scrollToField,\n      fields\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"form\", {\n        class: normalizeClass(unref(formClasses))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar Form = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"form.vue\"]]);\nexport { Form as default };","map":{"version":3,"names":["name","COMPONENT_NAME","fields","formSize","useFormSize","ns","useNamespace","formClasses","computed","labelPosition","inline","props","b","m","value","getField","prop","find","field","addField","push","removeField","splice","indexOf","resetFields","properties","model","debugWarn","filterFields","forEach","resetField","clearValidate","props2","isValidatable","hasModel","obtainValidateFields","length","filteredFields","validate","callback","validateField","doValidateField","fields2","validationErrors","fields3","Object","keys","Promise","reject","modelProps","shouldThrow","isFunction","result","e","Error","invalidFields","scrollToError","scrollToField","_a","$el","scrollIntoView","scrollIntoViewOptions","watch","rules","validateOnRuleChange","catch","err","deep","provide","formContextKey","reactive","toRefs","emit","useFormLabelWidth","expose","_ctx","_cache","openBlock","createElementBlock","class","normalizeClass","unref","renderSlot","$slots","Form","_export_sfc","_sfc_main"],"sources":["../../../../../../packages/components/form/src/form.vue"],"sourcesContent":["<template>\n  <form :class=\"formClasses\">\n    <slot />\n  </form>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, reactive, toRefs, watch } from 'vue'\nimport { debugWarn, isFunction } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from './hooks'\nimport { formContextKey } from './constants'\nimport { formEmits, formProps } from './form'\nimport { filterFields, useFormLabelWidth } from './utils'\n\nimport type { ValidateFieldsError } from 'async-validator'\nimport type { Arrayable } from '@element-plus/utils'\nimport type {\n  FormContext,\n  FormItemContext,\n  FormValidateCallback,\n  FormValidationResult,\n} from './types'\nimport type { FormItemProp } from './form-item'\n\nconst COMPONENT_NAME = 'ElForm'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(formProps)\nconst emit = defineEmits(formEmits)\n\nconst fields: FormItemContext[] = []\n\nconst formSize = useFormSize()\nconst ns = useNamespace('form')\nconst formClasses = computed(() => {\n  const { labelPosition, inline } = props\n  return [\n    ns.b(),\n    // todo: in v2.2.0, we can remove default\n    // in fact, remove it doesn't affect the final style\n    ns.m(formSize.value || 'default'),\n    {\n      [ns.m(`label-${labelPosition}`)]: labelPosition,\n      [ns.m('inline')]: inline,\n    },\n  ]\n})\n\nconst getField: FormContext['getField'] = (prop) => {\n  return fields.find((field) => field.prop === prop)\n}\n\nconst addField: FormContext['addField'] = (field) => {\n  fields.push(field)\n}\n\nconst removeField: FormContext['removeField'] = (field) => {\n  if (field.prop) {\n    fields.splice(fields.indexOf(field), 1)\n  }\n}\n\nconst resetFields: FormContext['resetFields'] = (properties = []) => {\n  if (!props.model) {\n    debugWarn(COMPONENT_NAME, 'model is required for resetFields to work.')\n    return\n  }\n  filterFields(fields, properties).forEach((field) => field.resetField())\n}\n\nconst clearValidate: FormContext['clearValidate'] = (props = []) => {\n  filterFields(fields, props).forEach((field) => field.clearValidate())\n}\n\nconst isValidatable = computed(() => {\n  const hasModel = !!props.model\n  if (!hasModel) {\n    debugWarn(COMPONENT_NAME, 'model is required for validate to work.')\n  }\n  return hasModel\n})\n\nconst obtainValidateFields = (props: Arrayable<FormItemProp>) => {\n  if (fields.length === 0) return []\n\n  const filteredFields = filterFields(fields, props)\n  if (!filteredFields.length) {\n    debugWarn(COMPONENT_NAME, 'please pass correct props!')\n    return []\n  }\n  return filteredFields\n}\n\nconst validate = async (\n  callback?: FormValidateCallback\n): FormValidationResult => validateField(undefined, callback)\n\nconst doValidateField = async (\n  props: Arrayable<FormItemProp> = []\n): Promise<boolean> => {\n  if (!isValidatable.value) return false\n\n  const fields = obtainValidateFields(props)\n  if (fields.length === 0) return true\n\n  let validationErrors: ValidateFieldsError = {}\n  for (const field of fields) {\n    try {\n      await field.validate('')\n    } catch (fields) {\n      validationErrors = {\n        ...validationErrors,\n        ...(fields as ValidateFieldsError),\n      }\n    }\n  }\n\n  if (Object.keys(validationErrors).length === 0) return true\n  return Promise.reject(validationErrors)\n}\n\nconst validateField: FormContext['validateField'] = async (\n  modelProps = [],\n  callback\n) => {\n  const shouldThrow = !isFunction(callback)\n  try {\n    const result = await doValidateField(modelProps)\n    // When result is false meaning that the fields are not validatable\n    if (result === true) {\n      await callback?.(result)\n    }\n    return result\n  } catch (e) {\n    if (e instanceof Error) throw e\n\n    const invalidFields = e as ValidateFieldsError\n\n    if (props.scrollToError) {\n      scrollToField(Object.keys(invalidFields)[0])\n    }\n    await callback?.(false, invalidFields)\n    return shouldThrow && Promise.reject(invalidFields)\n  }\n}\n\nconst scrollToField = (prop: FormItemProp) => {\n  const field = filterFields(fields, prop)[0]\n  if (field) {\n    field.$el?.scrollIntoView(props.scrollIntoViewOptions)\n  }\n}\n\nwatch(\n  () => props.rules,\n  () => {\n    if (props.validateOnRuleChange) {\n      validate().catch((err) => debugWarn(err))\n    }\n  },\n  { deep: true }\n)\n\nprovide(\n  formContextKey,\n  reactive({\n    ...toRefs(props),\n    emit,\n\n    resetFields,\n    clearValidate,\n    validateField,\n    getField,\n    addField,\n    removeField,\n\n    ...useFormLabelWidth(),\n  })\n)\n\ndefineExpose({\n  /**\n   * @description Validate the whole form. Receives a callback or returns `Promise`.\n   */\n  validate,\n  /**\n   * @description Validate specified fields.\n   */\n  validateField,\n  /**\n   * @description Reset specified fields and remove validation result.\n   */\n  resetFields,\n  /**\n   * @description Clear validation message for specified fields.\n   */\n  clearValidate,\n  /**\n   * @description Scroll to the specified fields.\n   */\n  scrollToField,\n  /**\n   * @description All fields context.\n   */\n  fields,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}