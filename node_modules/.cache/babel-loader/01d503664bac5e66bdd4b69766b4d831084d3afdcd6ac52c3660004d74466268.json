{"ast":null,"code":"import { ElCheckbox, ElButton } from 'element-plus';\nimport ToDoItemEditForm from \"./ToDoItemEditForm\";\nexport default {\n  components: {\n    ElCheckbox,\n    ElButton,\n    ToDoItemEditForm\n  },\n  props: {\n    label: {\n      required: true,\n      type: String\n    },\n    done: {\n      default: false,\n      type: Boolean\n    },\n    id: {\n      required: true,\n      type: String\n    }\n  },\n  data() {\n    return {\n      isEditing: false\n    };\n  },\n  computed: {\n    isDone: {\n      get() {\n        return this.done;\n      },\n      set(value) {\n        this.$emit('checkbox-changed', value);\n      }\n    }\n  },\n  methods: {\n    deleteToDo() {\n      this.$emit('item-deleted');\n    },\n    toggleToItemEditForm() {\n      this.isEditing = true;\n    },\n    focusOnEditButton() {\n      this.$nextTick(() => {\n        const editButtonRef = this.$refs.editButton;\n        editButtonRef.focus();\n      });\n    },\n    itemEdited(newItemName) {\n      this.$emit(\"item-edited\", newItemName);\n      this.isEditing = false;\n      this.focusOnEditButton();\n    },\n    editCancelled() {\n      this.isEditing = false;\n      this.focusOnEditButton();\n    }\n  }\n};","map":{"version":3,"names":["ElCheckbox","ElButton","ToDoItemEditForm","components","props","label","required","type","String","done","default","Boolean","id","data","isEditing","computed","isDone","get","set","value","$emit","methods","deleteToDo","toggleToItemEditForm","focusOnEditButton","$nextTick","editButtonRef","$refs","editButton","focus","itemEdited","newItemName","editCancelled"],"sources":["D:\\web全栈开发\\test-site\\新建文件夹\\moz-todo-vue\\src\\components\\ToDoItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"stack-small\" v-if=\"!isEditing\">\r\n    <div class=\"custom-checkbox\">\r\n      <el-checkbox\r\n        :id=\"id\"\r\n        v-model=\"isDone\"\r\n        @change=\"$emit('checkbox-changed')\" />\r\n      <label :for=\"id\" class=\"checkbox-label\">{{label}}</label>\r\n    </div>\r\n    <div class=\"btn-group\">\r\n      <el-button\r\n        type=\"button\"\r\n        class=\"btn\"\r\n        ref=\"editButton\"\r\n        @click=\"toggleToItemEditForm\">\r\n        Edit\r\n        <span class=\"visually-hidden\">{{label}}</span>\r\n      </el-button>\r\n      <el-button type=\"button\" class=\"btn btn__danger\" @click=\"deleteToDo\">\r\n        Delete <span class=\"visually-hidden\">{{label}}</span>\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n  <to-do-item-edit-form\r\n      v-else\r\n      :id=\"id\"\r\n      :label=\"label\"\r\n      @item-edited=\"itemEdited\"\r\n      @edit-cancelled=\"editCancelled\">\r\n  </to-do-item-edit-form>\r\n</template>\r\n\r\n<script>\r\nimport { ElCheckbox, ElButton } from 'element-plus';\r\nimport ToDoItemEditForm from \"./ToDoItemEditForm\";\r\n\r\nexport default {\r\n  components: {\r\n    ElCheckbox,\r\n    ElButton,\r\n    ToDoItemEditForm\r\n  },\r\n  props: {\r\n    label: { required: true, type: String },\r\n    done: { default: false, type: Boolean },\r\n    id: { required: true, type: String },\r\n  },\r\n  data() {\r\n    return {\r\n      isEditing: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isDone: {\r\n      get() {\r\n        return this.done;\r\n      },\r\n      set(value) {\r\n        this.$emit('checkbox-changed', value);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    deleteToDo() {\r\n      this.$emit('item-deleted');\r\n    },\r\n    toggleToItemEditForm() {\r\n      this.isEditing = true;\r\n    },\r\n    focusOnEditButton() {\r\n      this.$nextTick(() => {\r\n        const editButtonRef = this.$refs.editButton;\r\n        editButtonRef.focus();\r\n      });\r\n    },\r\n    itemEdited(newItemName) {\r\n      this.$emit(\"item-edited\", newItemName);\r\n      this.isEditing = false;\r\n      this.focusOnEditButton();\r\n    },\r\n    editCancelled() {\r\n      this.isEditing = false;\r\n      this.focusOnEditButton();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n  .custom-checkbox > .checkbox-label {\r\n  font-family: Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  font-size: 1rem;\r\n  line-height: 1.25;\r\n  color: #0b0c0c;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n.custom-checkbox > .checkbox {\r\n  font-family: Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  font-size: 1rem;\r\n  line-height: 1.25;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  height: 2.5rem;\r\n  margin-top: 0;\r\n  padding: 5px;\r\n  border: 2px solid #0b0c0c;\r\n  border-radius: 0;\r\n  appearance: none;\r\n}\r\n.custom-checkbox > input:focus {\r\n  outline: 3px dashed #fd0;\r\n  outline-offset: 0;\r\n  box-shadow: inset 0 0 0 2px;\r\n}\r\n.custom-checkbox {\r\n  font-family: Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  line-height: 1.25;\r\n  display: block;\r\n  position: relative;\r\n  min-height: 40px;\r\n  margin-bottom: 10px;\r\n  padding-left: 40px;\r\n  clear: left;\r\n}\r\n.custom-checkbox > input[type=\"checkbox\"] {\r\n  -webkit-font-smoothing: antialiased;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -2px;\r\n  left: -2px;\r\n  width: 44px;\r\n  height: 44px;\r\n  margin: 0;\r\n  opacity: 0;\r\n}\r\n.custom-checkbox > .checkbox-label {\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  line-height: inherit;\r\n  display: inline-block;\r\n  margin-bottom: 0;\r\n  padding: 8px 15px 5px;\r\n  cursor: pointer;\r\n  touch-action: manipulation;\r\n}\r\n.custom-checkbox > label::before {\r\n  content: \"\";\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 2px solid currentcolor;\r\n  background: transparent;\r\n}\r\n.custom-checkbox > input[type=\"checkbox\"]:focus + label::before {\r\n  border-width: 4px;\r\n  outline: 3px dashed #228bec;\r\n}\r\n.custom-checkbox > label::after {\r\n  box-sizing: content-box;\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 11px;\r\n  left: 9px;\r\n  width: 18px;\r\n  height: 7px;\r\n  transform: rotate(-45deg);\r\n  border: solid;\r\n  border-width: 0 0 5px 5px;\r\n  border-top-color: transparent;\r\n  opacity: 0;\r\n  background: transparent;\r\n}\r\n.custom-checkbox > input[type=\"checkbox\"]:checked + label::after {\r\n  opacity: 1;\r\n}\r\n@media only screen and (min-width: 40rem) {\r\n  label,\r\n  input,\r\n  .custom-checkbox {\r\n    font-size: 19px;\r\n    font-size: 1.9rem;\r\n    line-height: 1.31579;\r\n  }\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAiCA,SAASA,UAAU,EAAEC,QAAO,QAAS,cAAc;AACnD,OAAOC,gBAAe,MAAO,oBAAoB;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVH,UAAU;IACVC,QAAQ;IACRC;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,KAAK,EAAE;MAAEC,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEC;IAAO,CAAC;IACvCC,IAAI,EAAE;MAAEC,OAAO,EAAE,KAAK;MAAEH,IAAI,EAAEI;IAAQ,CAAC;IACvCC,EAAE,EAAE;MAAEN,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEC;IAAO;EACrC,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACR,IAAI;MAClB,CAAC;MACDS,GAAGA,CAACC,KAAK,EAAE;QACT,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAED,KAAK,CAAC;MACvC;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,KAAK,CAAC,cAAc,CAAC;IAC5B,CAAC;IACDG,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACT,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDU,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,MAAMC,aAAY,GAAI,IAAI,CAACC,KAAK,CAACC,UAAU;QAC3CF,aAAa,CAACG,KAAK,CAAC,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAACC,WAAW,EAAE;MACtB,IAAI,CAACX,KAAK,CAAC,aAAa,EAAEW,WAAW,CAAC;MACtC,IAAI,CAACjB,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACU,iBAAiB,CAAC,CAAC;IAC1B,CAAC;IACDQ,aAAaA,CAAA,EAAG;MACd,IAAI,CAAClB,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACU,iBAAiB,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}