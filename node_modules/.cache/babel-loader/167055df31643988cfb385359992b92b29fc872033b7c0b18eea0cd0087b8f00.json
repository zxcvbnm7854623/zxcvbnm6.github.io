{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport * as echarts from 'echarts/core';\nimport { BarChart } from 'echarts/charts';\nimport { TooltipComponent, TitleComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// 注册必要的组件\necharts.use([BarChart, TooltipComponent, TitleComponent, CanvasRenderer]);\nexport default {\n  name: 'EChartComponent',\n  props: {\n    toDoItems: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chartInstance: null\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  beforeUnmount() {\n    if (this.chartInstance) {\n      // 组件销毁前，释放ECharts实例资源\n      this.chartInstance.dispose();\n    }\n  },\n  watch: {\n    toDoItems: {\n      deep: true,\n      handler() {\n        this.updateChart();\n      }\n    }\n  },\n  methods: {\n    initChart() {\n      const chartDom = this.$refs.chartContainer;\n      this.chartInstance = echarts.init(chartDom, null, {\n        renderer: 'canvas'\n      });\n      this.updateChart();\n    },\n    updateChart() {\n      const categories = this.toDoItems.map(item => item.label);\n      const doneStatus = this.toDoItems.map(item => item.done ? 'Done' : 'Not Done');\n      this.chartInstance.setOption({\n        title: {\n          text: 'To-Do List Status'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: categories\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'Status',\n          type: 'bar',\n          data: doneStatus,\n          emphasis: {\n            focus: 'series'\n          },\n          itemStyle: {\n            normal: {\n              color: function (params) {\n                // 根据待办事项是否完成设置颜色\n                return params.value === 'Done' ? '#1f77b4' : '#d62728';\n              }\n            }\n          }\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","BarChart","TooltipComponent","TitleComponent","CanvasRenderer","use","name","props","toDoItems","type","Array","required","data","chartInstance","mounted","initChart","beforeUnmount","dispose","watch","deep","handler","updateChart","methods","chartDom","$refs","chartContainer","init","renderer","categories","map","item","label","doneStatus","done","setOption","title","text","tooltip","trigger","axisPointer","xAxis","yAxis","series","emphasis","focus","itemStyle","normal","color","params","value"],"sources":["D:\\web全栈开发\\test-site\\新建文件夹\\moz-todo-vue\\src\\components\\EChartComponent.vue"],"sourcesContent":["<template>\r\n  <div ref=\"chartContainer\" style=\"width: 100%; height: 400px;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts/core';\r\nimport { BarChart } from 'echarts/charts';\r\nimport { TooltipComponent, TitleComponent } from 'echarts/components';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\n\r\n// 注册必要的组件\r\necharts.use([BarChart, TooltipComponent, TitleComponent, CanvasRenderer]);\r\n\r\nexport default {\r\n  name: 'EChartComponent',\r\n  props: {\r\n    toDoItems: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.chartInstance) {\r\n      // 组件销毁前，释放ECharts实例资源\r\n      this.chartInstance.dispose();\r\n    }\r\n  },\r\n  watch: {\r\n    toDoItems: {\r\n      deep: true,\r\n      handler() {\r\n        this.updateChart();\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const chartDom = this.$refs.chartContainer;\r\n      this.chartInstance = echarts.init(chartDom, null, { renderer: 'canvas' });\r\n      this.updateChart();\r\n    },\r\n    updateChart() {\r\n      const categories = this.toDoItems.map(item => item.label);\r\n      const doneStatus = this.toDoItems.map(item => item.done ? 'Done' : 'Not Done');\r\n      \r\n      this.chartInstance.setOption({\r\n        title: {\r\n          text: 'To-Do List Status'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: categories\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          name: 'Status',\r\n          type: 'bar',\r\n          data: doneStatus,\r\n          emphasis: {\r\n            focus: 'series'\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: function (params) {\r\n                // 根据待办事项是否完成设置颜色\r\n                return params.value === 'Done' ? '#1f77b4' : '#d62728';\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 可以在这里添加一些样式，比如设置容器的宽度和高度 */\r\n</style>"],"mappings":";AAKA,OAAO,KAAKA,OAAM,MAAO,cAAc;AACvC,SAASC,QAAO,QAAS,gBAAgB;AACzC,SAASC,gBAAgB,EAAEC,cAAa,QAAS,oBAAoB;AACrE,SAASC,cAAa,QAAS,mBAAmB;;AAElD;AACAJ,OAAO,CAACK,GAAG,CAAC,CAACJ,QAAQ,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,cAAc,CAAC,CAAC;AAEzE,eAAe;EACbE,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACH,aAAa,EAAE;MACtB;MACA,IAAI,CAACA,aAAa,CAACI,OAAO,CAAC,CAAC;IAC9B;EACF,CAAC;EACDC,KAAK,EAAE;IACLV,SAAS,EAAE;MACTW,IAAI,EAAE,IAAI;MACVC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACC,WAAW,CAAC,CAAC;MACpB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPP,SAASA,CAAA,EAAG;MACV,MAAMQ,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,cAAc;MAC1C,IAAI,CAACZ,aAAY,GAAIb,OAAO,CAAC0B,IAAI,CAACH,QAAQ,EAAE,IAAI,EAAE;QAAEI,QAAQ,EAAE;MAAS,CAAC,CAAC;MACzE,IAAI,CAACN,WAAW,CAAC,CAAC;IACpB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ,MAAMO,UAAS,GAAI,IAAI,CAACpB,SAAS,CAACqB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAK,CAAC;MACzD,MAAMC,UAAS,GAAI,IAAI,CAACxB,SAAS,CAACqB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACG,IAAG,GAAI,MAAK,GAAI,UAAU,CAAC;MAE9E,IAAI,CAACpB,aAAa,CAACqB,SAAS,CAAC;QAC3BC,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfC,WAAW,EAAE;YACX9B,IAAI,EAAE;UACR;QACF,CAAC;QACD+B,KAAK,EAAE;UACL/B,IAAI,EAAE,UAAU;UAChBG,IAAI,EAAEgB;QACR,CAAC;QACDa,KAAK,EAAE;UACLhC,IAAI,EAAE;QACR,CAAC;QACDiC,MAAM,EAAE,CAAC;UACPpC,IAAI,EAAE,QAAQ;UACdG,IAAI,EAAE,KAAK;UACXG,IAAI,EAAEoB,UAAU;UAChBW,QAAQ,EAAE;YACRC,KAAK,EAAE;UACT,CAAC;UACDC,SAAS,EAAE;YACTC,MAAM,EAAE;cACNC,KAAK,EAAE,SAAAA,CAAUC,MAAM,EAAE;gBACvB;gBACA,OAAOA,MAAM,CAACC,KAAI,KAAM,MAAK,GAAI,SAAQ,GAAI,SAAS;cACxD;YACF;UACF;QACF,CAAC;MACH,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}